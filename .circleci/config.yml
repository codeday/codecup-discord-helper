version: 2.1
workflows:
  build:
    jobs:
      - test:
          filters:
            branches:
              only: master
          context: johnpeter-discord
      - build:
          requires:
            - test
          filters:
            branches:
              only: master
          context: johnpeter-discord
  build_test:
    jobs:
      - test:
          filters:
            branches:
              ignore: master
      - build_test:
          filters:
            branches:
              ignore: master
jobs:
  build:
    docker:
      - image: circleci/python:3.7
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run: |
          TAG=$CIRCLE_SHA1
          DOCKER_REPO=$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
          docker build -t $DOCKER_REPO:$TAG .
          docker tag $DOCKER_REPO:$TAG $DOCKER_REPO:latest
          echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
          docker push $DOCKER_REPO:$TAG
          docker push $DOCKER_REPO:latest
      - slack/status:
          webhook: ${DISCORD_WEBHOOK}

  build_test:
    docker:
      - image: circleci/python:3.7
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run: |
          TAG=$CIRCLE_SHA1
          DOCKER_REPO=$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
          docker build -t $DOCKER_REPO:$TAG .
  test:
    docker:
      - image: circleci/python:3.7
    steps:
      - setup_remote_docker
      - checkout
      - run: pip install -r requirements.txt
      - run: python -m pytest --junitxml=reports/pytest/pytest-report.xml -o junit_family=xunit1
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports
          destination: test_results
orbs:
  slack: circleci/slack@3.4.2